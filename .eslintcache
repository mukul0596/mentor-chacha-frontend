[{"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/index.js":"1","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/App.js":"2","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Context/AuthContext.js":"3","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Services/AuthService.js":"4","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Login/Login.js":"5","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/NavBar/NavBar.js":"6","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Header/Header.js":"7","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/More/More.js":"8","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Profile/Profile.js":"9","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/DialogBox/DialogBox.js":"10","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Button/Button.js":"11","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Profile/ResetPassword/ResetPassword.js":"12","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Recommendation/Recommendation.js":"13","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Blogs/Blogs.js":"14","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Blog/Blog.js":"15","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Notifications/Notifications.js":"16","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Notification/Notification.js":"17","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/StudentCenter/StudentCenter.js":"18","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/StudentCenter/Tests/Tests.js":"19","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Test/Test.js":"20","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/QuestionBank/QuestionBank.js":"21","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Accordion/Accordion.js":"22","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Questions/Questions.js":"23","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Question/Question.js":"24","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Slider/Slider.js":"25"},{"size":598,"mtime":1612958128192,"results":"26","hashOfConfig":"27"},{"size":2140,"mtime":1618817445003,"results":"28","hashOfConfig":"27"},{"size":932,"mtime":1612959562955,"results":"29","hashOfConfig":"27"},{"size":2278,"mtime":1613729189960,"results":"30","hashOfConfig":"27"},{"size":2340,"mtime":1613673456040,"results":"31","hashOfConfig":"27"},{"size":2248,"mtime":1619097642091,"results":"32","hashOfConfig":"27"},{"size":826,"mtime":1613329018833,"results":"33","hashOfConfig":"27"},{"size":1200,"mtime":1618680499749,"results":"34","hashOfConfig":"27"},{"size":4755,"mtime":1613747224829,"results":"35","hashOfConfig":"27"},{"size":1119,"mtime":1613747152799,"results":"36","hashOfConfig":"27"},{"size":268,"mtime":1613672674065,"results":"37","hashOfConfig":"27"},{"size":2784,"mtime":1613747286930,"results":"38","hashOfConfig":"27"},{"size":2514,"mtime":1614368761885,"results":"39","hashOfConfig":"27"},{"size":1172,"mtime":1614013752055,"results":"40","hashOfConfig":"27"},{"size":1179,"mtime":1614013841280,"results":"41","hashOfConfig":"27"},{"size":2356,"mtime":1614447795715,"results":"42","hashOfConfig":"27"},{"size":1284,"mtime":1614451281040,"results":"43","hashOfConfig":"27"},{"size":7488,"mtime":1619094507182,"results":"44","hashOfConfig":"27"},{"size":2355,"mtime":1618907834206,"results":"45","hashOfConfig":"27"},{"size":10209,"mtime":1618856676859,"results":"46","hashOfConfig":"27"},{"size":1676,"mtime":1618817504921,"results":"47","hashOfConfig":"27"},{"size":631,"mtime":1618811577566,"results":"48","hashOfConfig":"27"},{"size":1220,"mtime":1618817395973,"results":"49","hashOfConfig":"27"},{"size":921,"mtime":1618817547597,"results":"50","hashOfConfig":"27"},{"size":12879,"mtime":1619093153726,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"3orara",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/index.js",[],["111","112"],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/App.js",["113"],"import React, { useEffect, useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AuthContext } from './Context/AuthContext';\nimport Login from './Views/Login/Login';\nimport NavBar from './Components/NavBar/NavBar';\nimport More from './Views/More/More';\nimport Profile from './Views/Profile/Profile';\nimport Recommendation from './Views/Recommendation/Recommendation';\nimport Blogs from './Views/Blogs/Blogs';\nimport Blog from './Views/Blog/Blog';\nimport Notifications from './Views/Notifications/Notifications';\nimport Notification from './Views/Notification/Notification';\nimport StudentCenter from './Views/StudentCenter/StudentCenter';\nimport Test from './Views/Test/Test';\nimport QuestionBank from './Views/QuestionBank/QuestionBank';\nimport Questions from './Views/Questions/Questions';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = (props) => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (!isAuthenticated) \n      props.history.push('/login');\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/login' component={Login} />\n        <Route path='/' component={NavBar} />\n      </Switch>\n\n      <Switch>\n        <Route exact path='/more' component={More} />\n        <Route exact path='/profile' component={Profile} />\n        <Route exact path='/recommendation' component={Recommendation} />\n        <Route exact path='/blogs&faqs' component={Blogs} />\n        <Route exact path='/blogs&faqs/:id' component={Blog} />\n        <Route exact path='/notification' component={Notifications} />\n        <Route exact path='/notification/:id' component={Notification} />\n        <Route exact path='/student_center' component={StudentCenter} />\n        <Route exact path='/student_center/:testId' component={Test} />\n        <Route exact path='/question_bank' component={QuestionBank} />\n        <Route exact path='/question_bank/:subject/:topic' component={Questions} />\n      </Switch>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Context/AuthContext.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Services/AuthService.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Login/Login.js",["114"],"import React, { useContext, useEffect, useState } from 'react';\nimport AuthService from '../../Services/AuthService';\nimport { AuthContext } from '../../Context/AuthContext';\nimport logo from '../../Assets/logo.jpg';\nimport phoneIcon from '../../Assets/Icons/phone.png';\nimport lockIcon from '../../Assets/Icons/lock.png';\nimport { toast } from 'react-toastify';\nimport Button from '../../Components/Button/Button';\nimport './Login.css';\n\n\nconst Login = (props) => {\n    const [phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n\n    const authContext = useContext(AuthContext);\n\n    useEffect(() => {\n        if (authContext.isAuthenticated) \n            props.history.push('/');\n    }, []);\n\n    const loginUser = (e) => {\n        e.preventDefault();\n        AuthService.login ({ phone, password }).then(data => {\n            const {isAuthenticated, user, message} = data;\n            if (isAuthenticated) {\n                authContext.setUser(user);\n                authContext.setIsAuthenticated(isAuthenticated);\n                props.history.push('/')\n            } else \n                toast.error(message.msgBody, {position: toast.POSITION.TOP_CENTER, autoClose: 2000});\n        })\n    }\n\n    return (\n        <div className='Login'>\n            <div className='Cover'>\n                <img src={logo} alt='LOGO' />\n                <div className='Title'>Mentor <span>Chacha</span></div>\n            </div>\n\n            <form onSubmit={loginUser}>\n                <div className='Form-Field-Wrapper'>\n                    <img src={phoneIcon} alt='PHONE_ICON' />\n                    <input type='text' name='phone' placeholder='Phone' value={phone} onChange={e => setPhone(e.target.value)} required />\n                </div>\n                <div className='Form-Field-Wrapper'>\n                    <img src={lockIcon} alt='LOCK_ICON' />\n                    <input type='password' name='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} required />\n                </div>\n                <div className='Forgot-Password-Container'>\n                    <span>Forgot Password?</span>\n                </div>\n                <Button style={{margin: '20px 0', fontSize: '1.25rem'}}>Login</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/NavBar/NavBar.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Header/Header.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/More/More.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Profile/Profile.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/DialogBox/DialogBox.js",[],["115","116"],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Button/Button.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Profile/ResetPassword/ResetPassword.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Recommendation/Recommendation.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Blogs/Blogs.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Blog/Blog.js",["117"],"import React, { useState, useEffect } from 'react';\nimport Header from '../../Components/Header/Header';\nimport './Blog.css';\n\nconst Blog = (props) => {\n    const [blog, setBlog] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:5000/api/blog/${props.match.params.id}`, {\n            credentials: 'include',\n            headers:{\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setBlog(data);\n        });\n    }, [])\n\n    return (\n        <div className='Blog'>\n            <Header isProfilePage={false}>Blog & FAQs</Header>\n\n            <div className='Page-View-Wrapper'>\n                <div className='Page-View'>\n                    {\n                        blog\n                        ? <>\n                            <div className='Blog-Title'>{blog.title}</div>\n                            <div className='Blog-Description' dangerouslySetInnerHTML={{__html: blog.description}} />\n                        </>\n                        : 'Loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Blog;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Notifications/Notifications.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Notification/Notification.js",["118"],"import React, { useState, useEffect } from 'react';\nimport Header from '../../Components/Header/Header';\nimport './Notification.css';\n\nconst Notification = (props) => {\n    const [notification, setNotification] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:5000/api/notification/${props.match.params.id}`, {\n            credentials: 'include',\n            headers:{\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setNotification(data);\n        });\n    }, [])\n\n    return (\n        <div className='Notification'>\n            <Header isProfilePage={false}>Notification</Header>\n\n            <div className='Page-View-Wrapper'>\n                <div className='Page-View'>\n                    {\n                        notification\n                        ? <>\n                            <div className='Notification-Title'>{notification.title}</div>\n                            <div className='Notification-Description' dangerouslySetInnerHTML={{__html: notification.description}} />\n                        </>\n                        : 'Loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/StudentCenter/StudentCenter.js",["119","120","121"],"import React, { useState, useEffect } from 'react';\nimport { Chart } from 'react-charts'\nimport Header from '../../Components/Header/Header';\nimport Slider from '../../Components/Slider/Slider';\nimport Tests from './Tests/Tests';\nimport './StudentCenter.css';\n\nconst StudentCenter = () => {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    const [tests, setTests] = useState(null);\n    const [graphData, setGraphData] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:5000/api/testResult/graphData`, {\n            credentials: 'include',\n            headers: {\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setTests(data.tests);\n\n            const rankArr = [];\n            const percentageArr = [];\n            const accuracyArr = [];\n\n            data.tests.map(test => {\n                const date = `${(new Date(test.date)).getDate()} ${MONTHS[(new Date(test.date)).getMonth()]}`;\n                const testResult = data.testResults.filter(testRes => testRes.testId === test._id)[0];\n                rankArr.push([date, testResult.rank]);\n                percentageArr.push([date, testResult.percentage]);\n                accuracyArr.push([date, testResult.accuracy]);\n            });\n\n            setGraphData([rankArr, percentageArr, accuracyArr]);\n        });\n    }, []);\n    \n    return (\n        <div className='Student-Center'>\n            <Header isProfilePage={false}>Student Center</Header>\n\n            <div className='Page-View-Wrapper'>\n                <div className='Page-View'>\n                    {/* <Slider\n                        autoPlay={false}\n                        activeSlideDuration={3000}\n                        interactionMode=\"swipe\"\n                        alignCaption=\"center\"\n                        alignIndicators=\"center\"\n                        indicatorsColor=\"#23374D\"\n                        useRightLeftTriangles={false}\n                    >\n                        <div>\n                            <div className='Graph-Wrapper'>\n                                {\n                                    graphData \n                                    ? <Chart data={[\n                                            {\n                                                label: 'Rank',\n                                                data: graphData[0]\n                                            }\n                                        ]} \n                                        axes={[\n                                            { primary: true, type: 'ordinal', position: 'bottom' },\n                                            { type: 'linear', position: 'left' }\n                                        ]} \n                                        series={\n                                            {\n                                                showPoints: true\n                                            }\n                                        }\n                                        tooltip \n                                    />\n                                    : null\n                                }\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className='Graph-Wrapper'>\n                                {\n                                    graphData \n                                    ? <Chart data={[\n                                            {\n                                                label: 'Percentage',\n                                                data: graphData[1]\n                                            }\n                                        ]} \n                                        axes={[\n                                            { primary: true, type: 'ordinal', position: 'bottom' },\n                                            { type: 'linear', position: 'left' }\n                                        ]} \n                                        series={\n                                            {\n                                                showPoints: true\n                                            }\n                                        }\n                                        tooltip \n                                    />\n                                    : null\n                                }\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className='Graph-Wrapper'>\n                                {\n                                    graphData \n                                    ? <Chart data={[\n                                            {\n                                                label: 'Accuracy',\n                                                data: graphData[2]\n                                            }\n                                        ]} \n                                        axes={[\n                                            { primary: true, type: 'ordinal', position: 'bottom' },\n                                            { type: 'linear', position: 'left' }\n                                        ]} \n                                        series={\n                                            {\n                                                showPoints: true\n                                            }\n                                        }\n                                        tooltip \n                                    />\n                                    : null\n                                }\n                            </div>\n                        </div>\n                    </Slider> */}\n\n                    <div className='Graph-Wrapper'>\n                        {\n                            graphData \n                            ? <Chart data={[\n                                    {\n                                        label: 'Rank',\n                                        data: graphData[0]\n                                    },\n                                    {\n                                        label: 'Percentage',\n                                        data: graphData[1]\n                                    },\n                                    {\n                                        label: 'Accuracy',\n                                        data: graphData[2]\n                                    }\n                                ]} \n                                axes={[\n                                    { primary: true, type: 'ordinal', position: 'bottom' },\n                                    { type: 'linear', position: 'left' }\n                                ]} \n                                series={\n                                    {\n                                        showPoints: true\n                                    }\n                                }\n                                tooltip \n                            />\n                            : null\n                        }\n                    </div>\n\n                    {\n                        tests\n                        ? <Tests tests={tests} />\n                        : 'Loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentCenter;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/StudentCenter/Tests/Tests.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Test/Test.js",["122"],"import React, { useState, useEffect } from 'react';\nimport './Test.css';\n\nconst Test = (props) => {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const subjectAnalysisFields = [\n        {\n            field: 'totalMarks',\n            text: 'Total Marks'\n        },\n        {\n            field: 'marks',\n            text: 'Marks'\n        },\n        {\n            field: 'negativeMarks',\n            text: 'Negative Marks'\n        },\n        {\n            field: 'attempted',\n            text: 'Attempted'\n        },\n        {\n            field: 'unattempted',\n            text: 'Unattempted'\n        },\n        {\n            field: 'totalQuestions',\n            text: 'Total Questions'\n        },\n        {\n            field: 'correct',\n            text: 'Correct'\n        },\n        {\n            field: 'incorrect',\n            text: 'Incorrect'\n        },\n        {\n            field: 'accuracy',\n            text: 'Accuracy'\n        },\n        {\n            field: 'average',\n            text: 'Average'\n        },\n        {\n            field: 'highestMarks',\n            text: 'Highest Marks'\n        }\n    ]\n\n    const [test, setTest] = useState(null);\n    const [testResult, setTestResult] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:5000/api/test/${props.match.params.testId}`, {\n            credentials: 'include',\n            headers: {\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setTest(data);\n        });\n\n        fetch(`http://localhost:5000/api/testResult/${props.match.params.testId}`, {\n            credentials: 'include',\n            headers: {\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setTestResult(data);\n        });\n    }, []);\n\n    return (\n        <div className='Test'>\n            <div className='Page-View-Wrapper'>\n                <div className='Page-View'>\n                    {\n                        test && testResult\n                        ? <>\n                            <div className='Row-Vertical'>\n                                <div className='Title'>{test.title}</div>\n                                <div className='Date'>\n                                    {\n                                        `${DAYS[(new Date(test.date)).getDay()]}, \n                                        ${(new Date(test.date)).getDate()} \n                                        ${MONTHS[(new Date(test.date)).getMonth()]}, \n                                        ${(new Date(test.date)).getFullYear()}`\n                                    }\n                                </div>\n                            </div>\n\n                            <div className='Row-Vertical'>\n                                <div className='Card'>\n                                    <div className='Title'>Rank</div>\n                                    <div className='Value'>{testResult.rank}</div>\n                                </div>\n                                <div className='Card'>\n                                    <div className='Title'>Marks</div>\n                                    <div className='Value'>{testResult.marks}/{testResult.totalMarks}</div>\n                                </div>\n                                <div className='Card'>\n                                    <div className='Title'>Percentage</div>\n                                    <div className='Value'>{testResult.percentage.toFixed(2)}%</div>\n                                </div>\n                            </div>\n\n                            <div className='Row-Horizontal'>\n                                <div className='Row'>\n                                    <div className='Title'>Batch: </div>\n                                    <div className='Value'>{test.class} - {test.for}</div>\n                                </div>\n                                <div className='Row'>\n                                    <div className='Title'>Pattern: </div>\n                                    <div className='Value'>{test.pattern}</div>\n                                </div>\n                                <div className='Row'>\n                                    <div className='Title'>Students Appeared: </div>\n                                    <div className='Value'>{testResult.totalStudents}</div>\n                                </div>\n                            </div>\n\n                            <div className='Row-Vertical Two'>\n                                <div className='Card'>\n                                    <div className='Title'>Average Marks</div>\n                                    <div className='Value'>{testResult.average.toFixed(2)}</div>\n                                </div>\n                                <div className='Card'>\n                                    <div className='Title'>Highest Marks</div>\n                                    <div className='Value'>{testResult.highestMarks}</div>\n                                </div>\n                            </div>\n\n                            <div className='Row-Vertical Two'>\n                                <div className='Card'>\n                                    <div className='Title'>Answer</div>\n                                    <div className='Row-Vertical Two'>\n                                        <div className='Card'>\n                                            <div className='Title'>Correct</div>\n                                            <div className='Value'>{testResult.correct}</div>\n                                        </div>\n                                        <div className='Card'>\n                                            <div className='Title'>Incorrect</div>\n                                            <div className='Value'>{testResult.incorrect}</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='Card'>\n                                    <div className='Title'>Marks</div>\n                                    <div className='Row-Vertical Two'>\n                                        <div className='Card'>\n                                            <div className='Title'>Right</div>\n                                            <div className='Value'>{testResult.marks - testResult.negativeMarks}</div>\n                                        </div>\n                                        <div className='Card'>\n                                            <div className='Title'>Negative</div>\n                                            <div className='Value'>{testResult.negativeMarks}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='Row-Horizontal'>\n                                <div className='Title'>Questions</div>\n\n                                <div className='Row-Vertical'>\n                                    <div className='Card'>\n                                        <div className='Title'>Total</div>\n                                        <div className='Value'>{testResult.totalQuestions}</div>\n                                    </div>\n                                    <div className='Card'>\n                                        <div className='Title'>Attempted</div>\n                                        <div className='Value'>{testResult.attempted}</div>\n                                    </div>\n                                    <div className='Card'>\n                                        <div className='Title'>Unattempted</div>\n                                        <div className='Value'>{testResult.unattempted}</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='Card Direct'>\n                                <div className='Title'>Subject Analysis</div>\n\n                                <table cellSpacing={0} cellPadding={0}>\n                                    <thead>\n                                        <tr>\n                                            <td>Analysis</td>\n                                            {\n                                                testResult.subjectStats.map(subjectStat => (\n                                                    <td key={subjectStat.subject}>{subjectStat.subject}</td>\n                                                ))\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            subjectAnalysisFields.map(subjectAnalysisField => (\n                                                <tr key={subjectAnalysisField.field}>\n                                                    <td>{subjectAnalysisField.text}</td>\n                                                    {\n                                                        testResult.subjectStats.map((subjectStat, i) => (\n                                                            <td key={i}>{subjectStat[subjectAnalysisField.field].toFixed(2)}</td>\n                                                        ))\n                                                    }\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </>\n                        : 'Loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Test;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/QuestionBank/QuestionBank.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Accordion/Accordion.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Views/Questions/Questions.js",["123"],"import React, { useState, useEffect } from 'react';\nimport Header from '../../Components/Header/Header';\nimport Question from '../../Components/Question/Question';\nimport './Questions.css';\n\nconst Questions = (props) => {\n    const [questions, setQuestions] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:5000/api/questionBank/${props.match.params.subject}/${props.match.params.topic}/question`, {\n            credentials: 'include',\n            headers: {\n                \"accepts\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setQuestions(data);\n        });\n    }, []);\n\n    return (\n        <div className='Questions'>\n            <Header isProfilePage={false}>Questions</Header>\n\n            <div className='Page-View-Wrapper'>\n                <div className='Page-View'>\n                    {\n                        questions\n                        ? questions.map(question => (\n                            <Question question={question} />\n                        ))\n                        : 'Loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Questions;","/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Question/Question.js",[],"/home/mukul/Projects/Mentor Chacha/mentor-chacha-frontend/src/Components/Slider/Slider.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":27,"column":6,"nodeType":"130","endLine":27,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":21,"column":8,"nodeType":"130","endLine":21,"endColumn":10,"suggestions":"133"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":19,"column":8,"nodeType":"130","endLine":19,"endColumn":10,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"136","line":19,"column":8,"nodeType":"130","endLine":19,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":29,"column":33,"nodeType":"145","messageId":"146","endLine":29,"endColumn":35},{"ruleId":"128","severity":1,"message":"147","line":39,"column":8,"nodeType":"130","endLine":39,"endColumn":10,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":79,"column":8,"nodeType":"130","endLine":79,"endColumn":10,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":20,"column":8,"nodeType":"130","endLine":20,"endColumn":10,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'authContext.isAuthenticated' and 'props.history'. Either include them or remove the dependency array.",["156"],["153"],["154"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["157"],["158"],"no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'MONTHS'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'props.match.params.testId'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'props.match.params.subject' and 'props.match.params.topic'. Either include them or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [isAuthenticated, props.history]",{"range":"175","text":"176"},"Update the dependencies array to be: [authContext.isAuthenticated, props.history]",{"range":"177","text":"178"},"Update the dependencies array to be: [props.match.params.id]",{"range":"179","text":"180"},{"range":"181","text":"180"},"Update the dependencies array to be: [MONTHS]",{"range":"182","text":"183"},"Update the dependencies array to be: [props.match.params.testId]",{"range":"184","text":"185"},"Update the dependencies array to be: [props.match.params.subject, props.match.params.topic]",{"range":"186","text":"187"},[1111,1113],"[isAuthenticated, props.history]",[720,722],"[authContext.isAuthenticated, props.history]",[526,528],"[props.match.params.id]",[574,576],[1451,1453],"[MONTHS]",[1995,1997],"[props.match.params.testId]",[661,663],"[props.match.params.subject, props.match.params.topic]"]